using System.Linq;
using Content.Client.Administration.Systems;
using Content.Client.Administration.UI.Tabs.PlayerTab;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Network;

namespace Content.Client.Administration.UI.Logs.Entries;

[GenerateTypedNameReferences]
public sealed partial class AdminLogEntryPlayerList : ListContainer
{
    [Dependency] private readonly AdminSystem _adminSystem = default!;
    public AdminLogEntryPlayerList(Guid[] players)
    {
        RobustXamlLoader.Load(this);

        if (players.Length == 0)
            return;

        if (_adminSystem.PlayerList is not { } playerList || playerList.Count == 0)
            return;

        foreach (var guid in players)
        {
            var netUserId = new NetUserId(guid);
            // Linq here is fine since this runs in response to admin input in the UI and
            // this loop only tends to go through 1-4 iterations.
            if (playerList.FirstOrDefault(player => player.SessionId == netUserId) is not { } playerInfo)
                continue;

            var entry = new PlayerTabEntry(playerInfo,
                new StyleBoxFlat(),
                AdminPlayerTabColorOption.Both,
                AdminPlayerTabRoleTypeOption.RoleTypeSubtype,
                AdminPlayerTabSymbolOption.Specific);

            var button = new Button();
            PlayerListContainer.AddChild(entry);
        }

        Placeholder.Orphan();
    }
}
